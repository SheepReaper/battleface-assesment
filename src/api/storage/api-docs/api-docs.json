{
    "openapi": "3.0.0",
    "info": {
        "title": "Battleface Assessment API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "summary": "attempts to log in and get token",
                "description": "Login by email and password",
                "operationId": "postLogin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Input validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "string",
                                            "example": "The email must be a valid email address."
                                        },
                                        "password": {
                                            "type": "Password not long enough."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "summary": "attempts to log in and get token",
                "description": "Login by email and password",
                "operationId": "postLogin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Input validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "The name must be longer than 2."
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "The email must be a valid email address."
                                        },
                                        "password": {
                                            "type": "Password not long enough."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "summary": "logout",
                "description": "logout the current user",
                "operationId": "postLogout",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "summary": "refresh a token",
                "description": "refresh the user's current token",
                "operationId": "postRefresh",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/user-profile": {
            "get": {
                "summary": "return the logged-in user",
                "description": "get the current user object",
                "operationId": "getUserProfile",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quotation": {
            "get": {
                "summary": "Returns all quotations in DB",
                "description": "Returns all quotations in DB",
                "operationId": "getQuotes",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Quote"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "summary": "Creates a new Quote",
                "description": "Creates and returns a new quote",
                "operationId": "postQuotes",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "age",
                                    "currency_id",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "age": {
                                        "type": "number"
                                    },
                                    "currency_id": {
                                        "type": "number"
                                    },
                                    "start_date": {
                                        "type": "date"
                                    },
                                    "end_date": {
                                        "type": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Input validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "age": {
                                            "type": "string",
                                            "example": "First age must be 18 or older"
                                        },
                                        "currency_id": {
                                            "type": "string",
                                            "example": "Currency code must be supported"
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "example": "Date cannot be before today"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "example": "Trip must be at least 1 day long"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuoteRequestResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "email_verified_at": {
                        "type": "date"
                    },
                    "created_at": {
                        "type": "date"
                    },
                    "updated_at": {
                        "type": "date"
                    }
                },
                "type": "object"
            },
            "TokenResponse": {
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "token_type": {
                        "type": "string",
                        "example": "bearer"
                    },
                    "expires_in": {
                        "type": "number"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Quote": {
                "properties": {
                    "created_at": {
                        "type": "date"
                    },
                    "start_date": {
                        "type": "date"
                    },
                    "end_date": {
                        "type": "date"
                    },
                    "ages": {
                        "type": "string"
                    },
                    "total": {
                        "type": "number"
                    },
                    "currency_id": {
                        "type": "number"
                    },
                    "quotation_id": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "QuoteRequestResponse": {
                "properties": {
                    "total": {
                        "type": "number"
                    },
                    "currency_id": {
                        "type": "number"
                    },
                    "quotation_id": {
                        "type": "number"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        []
    ]
}